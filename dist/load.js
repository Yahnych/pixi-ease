const wait = require('./wait');
const to = require('./to');
const tint = require('./tint');
const shake = require('./shake');
const angle = require('./angle');
const face = require('./face');
const target = require('./target');
const movie = require('./movie');

/**
 * restart an animation = requires a saved state
 * @param {object} object(s) to animate
 */
module.exports = function load(object, load) {
    if (!load) {
        return null;
    }
    const options = { load };
    switch (load.type) {
        case 'Wait':
            return new wait(object, options);
        case 'To':
            return new to(object, null, null, options);
        case 'Tint':
            return new tint(object, null, null, options);
        case 'Shake':
            return new shake(object, null, null, options);
        case 'Angle':
            return new angle(object, null, null, null, options);
        case 'Face':
            return new face(object[0], object[1], null, options);
        case 'Target':
            return new target(object[0], object[1], null, options);
        case 'Movie':
            return new movie(object, object[1], null, options);
    }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9sb2FkLmpzIl0sIm5hbWVzIjpbIndhaXQiLCJyZXF1aXJlIiwidG8iLCJ0aW50Iiwic2hha2UiLCJhbmdsZSIsImZhY2UiLCJ0YXJnZXQiLCJtb3ZpZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJsb2FkIiwib2JqZWN0Iiwib3B0aW9ucyIsInR5cGUiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU9DLFFBQVEsUUFBUixDQUFiO0FBQ0EsTUFBTUMsS0FBS0QsUUFBUSxNQUFSLENBQVg7QUFDQSxNQUFNRSxPQUFPRixRQUFRLFFBQVIsQ0FBYjtBQUNBLE1BQU1HLFFBQVFILFFBQVEsU0FBUixDQUFkO0FBQ0EsTUFBTUksUUFBUUosUUFBUSxTQUFSLENBQWQ7QUFDQSxNQUFNSyxPQUFPTCxRQUFRLFFBQVIsQ0FBYjtBQUNBLE1BQU1NLFNBQVNOLFFBQVEsVUFBUixDQUFmO0FBQ0EsTUFBTU8sUUFBUVAsUUFBUSxTQUFSLENBQWQ7O0FBRUE7Ozs7QUFJQVEsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxJQUFULENBQWNDLE1BQWQsRUFBc0JELElBQXRCLEVBQ2pCO0FBQ0ksUUFBSSxDQUFDQSxJQUFMLEVBQ0E7QUFDSSxlQUFPLElBQVA7QUFDSDtBQUNELFVBQU1FLFVBQVUsRUFBRUYsSUFBRixFQUFoQjtBQUNBLFlBQVFBLEtBQUtHLElBQWI7QUFFSSxhQUFLLE1BQUw7QUFDSSxtQkFBTyxJQUFJZCxJQUFKLENBQVNZLE1BQVQsRUFBaUJDLE9BQWpCLENBQVA7QUFDSixhQUFLLElBQUw7QUFDSSxtQkFBTyxJQUFJWCxFQUFKLENBQU9VLE1BQVAsRUFBZSxJQUFmLEVBQXFCLElBQXJCLEVBQTJCQyxPQUEzQixDQUFQO0FBQ0osYUFBSyxNQUFMO0FBQ0ksbUJBQU8sSUFBSVYsSUFBSixDQUFTUyxNQUFULEVBQWlCLElBQWpCLEVBQXVCLElBQXZCLEVBQTZCQyxPQUE3QixDQUFQO0FBQ0osYUFBSyxPQUFMO0FBQ0ksbUJBQU8sSUFBSVQsS0FBSixDQUFVUSxNQUFWLEVBQWtCLElBQWxCLEVBQXdCLElBQXhCLEVBQThCQyxPQUE5QixDQUFQO0FBQ0osYUFBSyxPQUFMO0FBQ0ksbUJBQU8sSUFBSVIsS0FBSixDQUFVTyxNQUFWLEVBQWtCLElBQWxCLEVBQXdCLElBQXhCLEVBQThCLElBQTlCLEVBQW9DQyxPQUFwQyxDQUFQO0FBQ0osYUFBSyxNQUFMO0FBQ0ksbUJBQU8sSUFBSVAsSUFBSixDQUFTTSxPQUFPLENBQVAsQ0FBVCxFQUFvQkEsT0FBTyxDQUFQLENBQXBCLEVBQStCLElBQS9CLEVBQXFDQyxPQUFyQyxDQUFQO0FBQ0osYUFBSyxRQUFMO0FBQ0ksbUJBQU8sSUFBSU4sTUFBSixDQUFXSyxPQUFPLENBQVAsQ0FBWCxFQUFzQkEsT0FBTyxDQUFQLENBQXRCLEVBQWlDLElBQWpDLEVBQXVDQyxPQUF2QyxDQUFQO0FBQ0osYUFBSyxPQUFMO0FBQ0ksbUJBQU8sSUFBSUwsS0FBSixDQUFVSSxNQUFWLEVBQWtCQSxPQUFPLENBQVAsQ0FBbEIsRUFBNkIsSUFBN0IsRUFBbUNDLE9BQW5DLENBQVA7QUFqQlI7QUFtQkgsQ0ExQkQiLCJmaWxlIjoibG9hZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHdhaXQgPSByZXF1aXJlKCcuL3dhaXQnKVxuY29uc3QgdG8gPSByZXF1aXJlKCcuL3RvJylcbmNvbnN0IHRpbnQgPSByZXF1aXJlKCcuL3RpbnQnKVxuY29uc3Qgc2hha2UgPSByZXF1aXJlKCcuL3NoYWtlJylcbmNvbnN0IGFuZ2xlID0gcmVxdWlyZSgnLi9hbmdsZScpXG5jb25zdCBmYWNlID0gcmVxdWlyZSgnLi9mYWNlJylcbmNvbnN0IHRhcmdldCA9IHJlcXVpcmUoJy4vdGFyZ2V0JylcbmNvbnN0IG1vdmllID0gcmVxdWlyZSgnLi9tb3ZpZScpXG5cbi8qKlxuICogcmVzdGFydCBhbiBhbmltYXRpb24gPSByZXF1aXJlcyBhIHNhdmVkIHN0YXRlXG4gKiBAcGFyYW0ge29iamVjdH0gb2JqZWN0KHMpIHRvIGFuaW1hdGVcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBsb2FkKG9iamVjdCwgbG9hZClcbntcbiAgICBpZiAoIWxvYWQpXG4gICAge1xuICAgICAgICByZXR1cm4gbnVsbFxuICAgIH1cbiAgICBjb25zdCBvcHRpb25zID0geyBsb2FkIH1cbiAgICBzd2l0Y2ggKGxvYWQudHlwZSlcbiAgICB7XG4gICAgICAgIGNhc2UgJ1dhaXQnOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyB3YWl0KG9iamVjdCwgb3B0aW9ucylcbiAgICAgICAgY2FzZSAnVG8nOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyB0byhvYmplY3QsIG51bGwsIG51bGwsIG9wdGlvbnMpXG4gICAgICAgIGNhc2UgJ1RpbnQnOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyB0aW50KG9iamVjdCwgbnVsbCwgbnVsbCwgb3B0aW9ucylcbiAgICAgICAgY2FzZSAnU2hha2UnOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyBzaGFrZShvYmplY3QsIG51bGwsIG51bGwsIG9wdGlvbnMpXG4gICAgICAgIGNhc2UgJ0FuZ2xlJzpcbiAgICAgICAgICAgIHJldHVybiBuZXcgYW5nbGUob2JqZWN0LCBudWxsLCBudWxsLCBudWxsLCBvcHRpb25zKVxuICAgICAgICBjYXNlICdGYWNlJzpcbiAgICAgICAgICAgIHJldHVybiBuZXcgZmFjZShvYmplY3RbMF0sIG9iamVjdFsxXSwgbnVsbCwgb3B0aW9ucylcbiAgICAgICAgY2FzZSAnVGFyZ2V0JzpcbiAgICAgICAgICAgIHJldHVybiBuZXcgdGFyZ2V0KG9iamVjdFswXSwgb2JqZWN0WzFdLCBudWxsLCBvcHRpb25zKVxuICAgICAgICBjYXNlICdNb3ZpZSc6XG4gICAgICAgICAgICByZXR1cm4gbmV3IG1vdmllKG9iamVjdCwgb2JqZWN0WzFdLCBudWxsLCBvcHRpb25zKVxuICAgIH1cbn0iXX0=